abline(h=0.50)
abline(v=0.62)
legend("bottomleft",legend=unique(df$mutation),cex=0.7,fill=unique(df$mutations_new),bty = "n",y.intersp=0.6)
other.var <- c(
"L914F",
"E545K",
"Arg14GlufsX29",
"T1105N:G1115Ter",
"E542K",
"nd",
"nd",
"T1105N:T1106P",
"nd",
"nd",
"nd",
"nd",
"H1047R",
"L914F",
"nd",
"nd",
"E545K",
"E542K",
"nd",
"nd",
"nd",
"nd",
"E542K",
"E545G",
"nd",
"nd",
"L914F",
"nd",
"L914F",
"Q546R",
"L914F",
"R1099Ter",
"nd",
"E545K",
"H1047R",
"nd"
)
df$variant <- as.factor(other.var)
df$variant_new <- as.numeric(df$variant)
palette(brewer.pal(n = 11, name = "Paired"))
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$variant_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
abline(h=0.50)
abline(v=0.62)
legend("bottomleft",legend=unique(df$variant),cex=0.7,fill=unique(df$variant_new),bty = "n",y.intersp=0.6)
View(df)
View(genes_per_patient.v)
View(genes_per_patient.l)
genes_per_patient.v[[1]]
names(pct.v)
length(genes_per_patient.v[[1]])
View(splited_patients.l)
View(splited_patients.v)
View(union.lst)
View(splited_patients.l)
View(union.lst)
View(v.and.l)
View(v.and.l)
View(sel.ham.l)
head(hamming_com)
head(hamming_com[[1]])
head(hamming_com[[2]])
View(sel.ham.l)
sel.genes.v <- readRDS("../feature_selection/sel_genes_v") #table generated in clustering.R, maybe change this to go from pre multi
View(sel.genes.v)
se <- readRDS("../preprocess/patients_and_controls")
View(se)
v.conditions <- rep("venous malformation",length(v_known))
v.conditions <- rep("lymphatic malformation",length(v_known))
v.conditions <- rep("venous malformation",length(v_known))
l.conditions <- rep("lymphatic malformation",length(v_known))
View(df)
metadata <- data.frame(c(v.conditions,l.conditions,others.conditions),rownames=c(v_known,l_known,others))
others.conditions <- c("strange case",
"capillary malformation",
"capillary malformation",
"eccrine angiomatous hamartoma",
"FAVA: lymphatic component",
"FAVA: lymphatic component",
"glomuvenous malformation",
"infantile hemangioma",
"infantile hemangioma",
"venolymphatic malformation",
"venolymphatic malformation",
"venolymphatic malformation",
"venous malformation/hemangioma?",
"venous malformation: hiperplasia"
)
metadata <- data.frame(c(v.conditions,l.conditions,others.conditions),rownames=c(v_known,l_known,others))
l.conditions <- rep("lymphatic malformation",length(l_known))
others.conditions <- c("strange case",
"capillary malformation",
"capillary malformation",
"eccrine angiomatous hamartoma",
"FAVA: lymphatic component",
"FAVA: lymphatic component",
"glomuvenous malformation",
"infantile hemangioma",
"infantile hemangioma",
"venolymphatic malformation",
"venolymphatic malformation",
"venolymphatic malformation",
"venous malformation/hemangioma?",
"venous malformation: hiperplasia"
)
metadata <- data.frame(c(v.conditions,l.conditions,others.conditions),rownames=c(v_known,l_known,others))
View(metadata)
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
View(metadata)
metadata <- metadata[order(metadata)]
order(metadata)
metadata <- metadata[order(rownames(metadata))]
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata <- metadata[order(rownames(metadata)),]
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata <- metadata[order(row.names(metadata)),]
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata[order(row.names(metadata)),]
metadata <- metadata[order(row.names(metadata)),]
sort(row.names(metadata))
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
sort(row.names(metadata))
metadata[sort(row.names(metadata)),]
metadata[sort(row.names(metadata))]
condf <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata <- metadata[order(row.names(metadata)),]
metadata <- condf[order(row.names(condf)),]
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata <- metadata[order(row.names(metadata),),drop=F]
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata <- metadata[order(row.names(metadata),drop=F),]
metadata <- metadata[order(row.names(metadata),,drop=F),]
?order
?ordersort
?sort
v_known <- c("VM015", "VM040", "VM042", "VM043", "VM048", "VM053", "VM056", "VM060",
"VM064", "VM066", "VM073", "VM083", "VM099", "VM108", "VM110", "VM111",
"VM113", "VM127")
l_known <- c("VM024", "VM038", "VM071", "VM072")
others <- c("VM119",
"VM103",
"VM081",
"VM093",
"VM090",
"VM124",
"VM082",
"VM055",
"VM068",
"VM085",
"VM089",
"VM125",
"VM092",
"VM054"
)
v.conditions <- rep("venous malformation",length(v_known))
l.conditions <- rep("lymphatic malformation",length(l_known))
others.conditions <- c("strange case",
"capillary malformation",
"capillary malformation",
"eccrine angiomatous hamartoma",
"FAVA: lymphatic component",
"FAVA: lymphatic component",
"glomuvenous malformation",
"infantile hemangioma",
"infantile hemangioma",
"venolymphatic malformation",
"venolymphatic malformation",
"venolymphatic malformation",
"venous malformation/hemangioma?",
"venous malformation: hiperplasia"
)
metadata <- data.frame(conditions=c(v.conditions,l.conditions,others.conditions),row.names=c(v_known,l_known,others))
metadata <- metadata[order(row.names(metadata)),,drop=F]
View(metadata)
mut <- c("TEK",
"PIK3CA",
"PTEN",
"TEK",
"PIK3CA",
"nd",
"nd",
"TEK",
"nd",
"nd",
"nd",
"nd",
"PIK3CA",
"TEK",
"nd",
"nd",
"PIK3CA",
"PIK3CA",
"nd",
"nd",
"nd",
"nd",
"PIK3CA",
"PIK3CA",
"nd",
"nd",
"TEK",
"nd",
"TEK",
"PIK3CA",
"TEK",
"TEK",
"nd",
"PIK3CA",
"PIK3CA",
"nd"
)
var <- c(
"L914F",
"E545K",
"Arg14GlufsX29",
"T1105N:G1115Ter",
"E542K",
"nd",
"nd",
"T1105N:T1106P",
"nd",
"nd",
"nd",
"nd",
"H1047R",
"L914F",
"nd",
"nd",
"E545K",
"E542K",
"nd",
"nd",
"nd",
"nd",
"E542K",
"E545G",
"nd",
"nd",
"L914F",
"nd",
"L914F",
"Q546R",
"L914F",
"R1099Ter",
"nd",
"E545K",
"H1047R",
"nd"
)
metadata$mutations <- mut
metadata$variants <- var
metadata$variants <- var
View(metadata)
write.csv(metadata, file="metadata.csv")
library(sigclust2)
library(jaccard)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(gprofiler2)
library(dendroextras)
library(dendextend)
library(circlize)
library(jaccard)
library(AnnotationDbi)
library(org.Hs.eg.db)
setwd("~/Vascular_Disease/MG-04_Illumina_totalRNASeq/feature_selection")
getwd()
setwd("/Users/sofiaillescas/Desktop/Vascular_Disease/vascular-disease/MG-04_Illumina_totalRNASeq/feature_selection")
g.lst.v <- readRDS("sel_genes_v")
g.lst.v <- readRDS("sel_genes_l")
meta <- read.csv("../metadata.csv")
meta <- read.csv("../metadata.csv",row.names = 1)
g.lst.v <- readRDS("sel_genes_v")
g.lst.l <- readRDS("sel_genes_l")
patient_lst.v <- lapply(g.lst.v,function(x) as.integer(unique(unlist(g.lst.v)) %in% x))
patient_matrix.v <- lapply(patient_lst.v, function(x) as.data.frame(x))
View(patient_lst.v)
vfun <- function(x, y) {1 - jaccard(x, y)}
mfun <- function(x) {
as.dist(outer(split(x, f = row(x)), split(x, f = row(x)),
Vectorize(vfun)))
}
#Mapping gene IDs
geneSymbols <- mapIds(org.Hs.eg.db, keys=rownames(t(patient_matrix)), keytype="SYMBOL", column="ENTREZID", multiVals="first")
library(jaccard)
library(AnnotationDbi)
library(org.Hs.eg.db)
setwd("/Users/sofiaillescas/Desktop/Vascular_Disease/vascular-disease/MG-04_Illumina_totalRNASeq/feature_selection")
g.lst.v <- readRDS("sel_genes_v")
g.lst.l <- readRDS("sel_genes_l")
meta <- read.csv("../metadata.csv",row.names = 1)
patient_lst.v <- lapply(g.lst.v,function(x) as.integer(unique(unlist(g.lst.v)) %in% x))
patient_matrix.v <- lapply(patient_lst.v, function(x) as.data.frame(x))
for (i in 1:length(patient_matrix.v)) {
rownames(patient_matrix.v[[i]]) <- unique(unlist(g.lst.v))
}
patient_matrix.v <- lapply(patient_matrix.v, function(x) as.data.frame(x))
patient_matrix.v <- as.data.frame(patient_matrix.v)
colnames(patient_matrix.v) <- c("VM015", "VM024", "VM038", "VM040", "VM042", "VM043",
"VM048", "VM053", "VM054", "VM055", "VM056", "VM060", "VM064",
"VM066", "VM068", "VM071", "VM072", "VM073", "VM081", "VM082",
"VM083", "VM085", "VM089", "VM090", "VM092", "VM093", "VM099",
"VM103", "VM108", "VM110", "VM111", "VM113", "VM119", "VM124",
"VM125", "VM127")
patient_matrix.v <- t(patient_matrix.v)
vfun <- function(x, y) {1 - jaccard(x, y)}
mfun <- function(x) {
as.dist(outer(split(x, f = row(x)), split(x, f = row(x)),
Vectorize(vfun)))
}
#Mapping gene IDs
geneSymbols <- mapIds(org.Hs.eg.db, keys=rownames(t(patient_matrix.v)), keytype="SYMBOL", column="ENTREZID", multiVals="first")
head(geneSymbols)
inds <- which(!is.na(geneSymbols))
found_genes <- geneSymbols[inds]
g.lst.eid.v <- lapply(g.lst, function(x) found_genes[x])
g.lst.eid.v <- lapply(g.lst.v, function(x) found_genes[x])
saveRDS(g.lst.eid.v, file="../multilayer/genes_per_patientv2")
patient_lst.l <- lapply(g.lst.l,function(x) as.integer(unique(unlist(g.lst.l)) %in% x))
patient_matrix.l <- lapply(patient_lst.l, function(x) as.data.frame(x))
for (i in 1:length(patient_matrix.l)) {
rownames(patient_matrix.l[[i]]) <- unique(unlist(g.lst.l))
}
patient_matrix.l <- lapply(patient_matrix.l, function(x) as.data.frame(x))
patient_matrix.l <- as.data.frame(patient_matrix.l)
colnames(patient_matrix.l) <- c("VM015", "VM024", "VM038", "VM040", "VM042", "VM043",
"VM048", "VM053", "VM054", "VM055", "VM056", "VM060", "VM064",
"VM066", "VM068", "VM071", "VM072", "VM073", "VM081", "VM082",
"VM083", "VM085", "VM089", "VM090", "VM092", "VM093", "VM099",
"VM103", "VM108", "VM110", "VM111", "VM113", "VM119", "VM124",
"VM125", "VM127")
patient_matrix.l <- t(patient_matrix.l)
vfun <- function(x, y) {1 - jaccard(x, y)}
mfun <- function(x) {
as.dist(outer(split(x, f = row(x)), split(x, f = row(x)),
Vectorize(vfun)))
}
geneSymbols <- mapIds(org.Hs.eg.db, keys=rownames(t(patient_matrix.l)), keytype="SYMBOL", column="ENTREZID", multiVals="first")
head(geneSymbols)
inds <- which(!is.na(geneSymbols))
found_genes <- geneSymbols[inds]
g.lst.eid.l <- lapply(g.lst.l, function(x) found_genes[x])
saveRDS(g.lst.eid.l, file="../multilayer/genes_per_patientl2")
View(g.lst.eid.l)
View(g.lst.eid.v)
sel.ham.v <- ham_dist[g.lst.eid.v,g.lst.eid.v]
ham_dist <- read.csv("multilayer/hamming_2022.csv")
ham_dist <- read.csv("../multilayer/hamming_2022.csv")
sel.ham.v <- ham_dist[g.lst.eid.v,g.lst.eid.v]
g.lst.eid.v
v.genes <- unique(unlist(g.lst.eid.v))
v.genes
l.genes <- unique(unlist(g.lst.eid.l))
sel.ham.v <- ham_dist[v.genes,v.genes]
head(colnames(ham_dist))
head(rownames(ham_dist))
head(row.names(ham_dist))
head(ham_dist[1]))
head(ham_dist[1])
ham_dist <- read.csv("../multilayer/hamming_2022.csv",row.names = 1)
head(rownames(ham_dist))
head(colnames(ham_dist))
colnames(ham_dist) <- rownames(ham_dist)
head(colnames(ham_dist))
sel.ham.v <- ham_dist[v.genes,v.genes]
v.genes
v.genes <- unique(unlist(g.lst.eid.v))
l.genes <- unique(unlist(g.lst.eid.l))
sel.ham.v <- ham_dist[v.genes,v.genes]
head(colnames(ham_dist))
head(ham_dist[v.genes,])
head(ham_dist[v.genes,1])
head(ham_dist[v.genes,v.genes])
ham_dist[v.genes,1:6]
49.01961 / 50
49.01961 / 50 * 51
0.9803922 * 51
ham_dist <- ham_dist / 50
ham_dist <- ham_dist * 51
ham_dist[1:6,1:6]
length(seq(0,50,1))
typeof(colnames(ham_dist))
typeof(rownames(ham_dist))
typeof(v.genes)
sel.ham.v <- ham_dist[v.genes,v.genes]
sel.ham.v <- ham_dist[,v.genes]
sel.ham.v <- ham_dist[v.genes,]
sel.ham.l <- ham_dist[l.genes,]
saveRDS(sel.ham.v,file="sel_ham_v")
saveRDS(sel.ham.l,file="sel_ham_l")
jaccard_ind <- function(x){
res <- matrix(data=NA,nrow=ncol(x),ncol=ncol(x))
rownames(res) <- colnames(x)
colnames(res) <- colnames(x)
for(i in 1:ncol(x)){
uno <- rownames(x)[which(x[,i]==1)]
for(j in 1:ncol(x)){
if(is.na(res[i,j])){
dos <- rownames(x)[which(x[,j]==1)]
numerador <- length(intersect(uno,dos))
denom <- length(union(uno,dos))
out <- numerador/denom
res[i,j] <- out
res[j,i] <- res[i,j]
}
}
}
attr(res,"method") <- "jaccard_ind"
return(as.dist(1-res)) ###Also: We have to be calculating a dissimilarity matrix with the function, so 1-x.
}
setwd('~/Desktop/Vascular_Disease/vascular-disease/MG-04_Illumina_totalRNASeq/multilayer')
# Load dependencies
#library(sigclust2)
library(pvclust)
library(fpc)
library(jaccard)
library(CmmD)
library(readr)
library(knitr)
library(ggplot2)
library(ggrepel)
library(data.table)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(ggvenn)
library(RColorBrewer)
library(SummarizedExperiment)
setwd('~/Desktop/Vascular_Disease/vascular-disease/MG-04_Illumina_totalRNASeq/multilayer')
sel.genes.v <- readRDS("../feature_selection/sel_genes_v") #table generated in clustering.R, maybe change this to go from pre multi
sel.genes.l <- readRDS("../feature_selection/sel_genes_l") #table generated in clustering.R
g.lst.eid.l
names(g.lst.eid.l)
names(g.lst.eid.l[[1]])
for (j in 1:36) {
union.lst[[j]] <- union(names(g.lst.eid.l), names(g.lst.eid.v))
}
union.lst <- list(seq(1,36))
for (j in 1:36) {
union.lst[[j]] <- union(names(g.lst.eid.l), names(g.lst.eid.v))
}
1:36
View(union.lst)
names(g.lst.eid.l)
unique(unlist(g.lst.eid.l))
unlist(g.lst.eid.l)
union.lst <- list(seq(1,36))
for (j in 1:36) {
union.lst[[j]] <- union(unique(unlist(names(g.lst.eid.l))), unique(unlist(names(g.lst.eid.v))))
}
for (j in 1:36) {
union.lst[[j]] <- union(names(g.lst.eid.l[j]), names(g.lst.eid.v[j]))
}
union(names(g.lst.eid.l[1]), names(g.lst.eid.v[1]))
for (j in 1:36) {
union.lst[[j]] <- union(names(g.lst.eid.l[[j]]), names(g.lst.eid.v[[j]]))
}
names(union.lst) <- c("VM015", "VM024", "VM038", "VM040", "VM042", "VM043",
"VM048", "VM053", "VM054", "VM055", "VM056", "VM060", "VM064",
"VM066", "VM068", "VM071", "VM072", "VM073", "VM081", "VM082",
"VM083", "VM085", "VM089", "VM090", "VM092", "VM093", "VM099",
"VM103", "VM108", "VM110", "VM111", "VM113", "VM119", "VM124",
"VM125", "VM127")
pct.v <- c()
pct.l <- c()
for (e in 1:length(names(union.lst))) {
pct.v[e] <- length(names(g.lst.eid.v[[e]]))/length(union.lst[[e]])
pct.l[e] <- length(names(g.lst.eid.l[[e]]))/length(union.lst[[e]])
}
names(pct.v) <- names(union.lst)
names(pct.l) <- names(union.lst)
df <- meta
df$pct.l <- pct.l
df$pct.v <- pct.v
View(df)
library(RColorBrewer)
palette(brewer.pal(n = 11, name = "Paired"))
df$conditions <- as.factor(df$conditions)
df$conditions_new <- as.numeric(df$conditions)
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$conditions_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
abline(h=0.55)
abline(h=0.6)
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$conditions_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
abline(h=0.6)
abline(v=0.7)
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$mutations_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
df$mutations <- as.factor(df$mutations)
df$mutations_new <- as.numeric(df$mutations)
palette(brewer.pal(n = 11, name = "Paired"))
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$mutations_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
abline(h=0.6)
abline(v=0.7)
legend("bottomleft",legend=unique(df$conditions),cex=0.7,fill=unique(df$conditions_new),bty = "n",y.intersp=0.6)
legend("bottomleft",legend=unique(df$conditions),cex=0.7,fill=unique(df$mutations_new),bty = "n",y.intersp=0.6)
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$mutations_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
abline(h=0.6)
abline(v=0.7)
legend("bottomleft",legend=unique(df$conditions),cex=0.7,fill=unique(df$mutations_new),bty = "n",y.intersp=0.6)
legend("bottomleft",legend=unique(df$mutations),cex=0.7,fill=unique(df$mutations_new),bty = "n",y.intersp=0.6)
plot(df$pct.l, df$pct.v, type="p",pch=19,axes=T,xlab="percentage lymphatic",ylab="percentage venous", col=df$mutations_new)
text(df$pct.l, df$pct.v, rownames(df),xpd=T, pos=2,cex=0.7, offset=0.5)
abline(h=0.6)
abline(v=0.7)
legend("bottomleft",legend=unique(df$mutations),cex=0.7,fill=unique(df$mutations_new),bty = "n",y.intersp=0.6)
